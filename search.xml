<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux学习（二）]]></title>
    <url>%2F2018%2F03%2F09%2FLinux%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[Bash简单入门在后面有用到Bash和shell，所以先看一点相关的东西 Shell:命令解释器，是一种解释性语言，也成为脚本语言 Shell编程：可以使用vim,gedit来创建shell程序 gedit hello.sh //创建shell程序#!/bin/bash //#!用来说明文件类型，表示为需要由bin目录下的bash程序来解释echo “hello world”sh hello.sh //当使用 ./ 来进行执行时需要对文件的可执行权限进行修改 效果如下也可以使用bash/./source来执行程序 环境变量与文件查找变量 变量（shell变量）：计算机中用于计算一个值的符号，可以用于不同的运算处理当中．一个范围内只能由一个同名变量． declare temptemp=SJQecho $temp以上代码为声明变量和显示变量值，也可以不使用 declare 直接对变量进行赋值，效果如下 环境变量：作用域比自定义变量的大（如shell的环境变量作用于自身和它的子进程）变量分为三种类型：1.当前shell进程私有的用户自定义变量；2.shell本身内建的变量；3.从自定义变量导出的环境变量 有关变量的一些命令 set: 显示当前shell的所有变量 env: 显示与当前用户相关的环境变量，也可以让命令在指定环境中运行 export: 显示从shell中导出成环境变量的变量，也能通过它将自定义变量导出为环境变量（环境变量通常为大写） zsh //创建自shell如果不是环境变量，将无法使用该变量，需要使用export来使该变量变为环境变量如果需要将变量变为永久的扮靓，需要修改配置文件．在这里知道了两个相关的文件：/etc/bashrc和/ect/profile，它们两个分别存放shell变量和环境变量 添加自定义路径到”PATH”环境变量： PATH=$PATH:home/…(绝对路径)使用这种方法，在退出终端后失效PATH以：作为分隔符 修改和删除已有变量：输入｜作用－－｜：－${变量名#匹配字符 | 从前到后删除最短数据${变量名##匹配字符} | 从前到后删除最长数据${变量名%匹配字符} | 从后到前删除最短数据${变量名%%匹配字符} | 从后到前删除最长数据${变量名/旧字符串/新字符串} | 将第一个旧字符串换为新字符串${变量名//旧字符串/新字符串} | 将全部旧字符串换为新字符串 unset 变量名 删除变量 文件查找 whereis: 快速 locate: 快 全 locate /etc/sh：查找/etc下所有sh开头的文件locate /usr/share/*.jpg : 查找所有jpg文件-c统计数目 －i忽略大小写 which：小而快速，只从PATH环境变量指向的路径去搜索指令 find: 精而细． find [path][option][action]]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux学习]]></title>
    <url>%2F2018%2F03%2F07%2FLinux%E5%9F%BA%E6%9C%AC%E6%8C%87%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[目录结构图片转自实验楼 目录路径使用cd切换目录;.表示当前目录;..表示上一级目录;使用cd ~进入当前用户的home目录，也可以使用”cd /home/用户名”来进入使用pwd来获取当前路径，如下图 创建文件及目录新建空白文件： touch 文件名新建目录： mkdir 目录名（使用-p可以创建不存在的父目录）创建多个文件： touch file{1..5}.txt复制文件： cp 文件名 目的目录复制整个目录： cp -r(或者－R) 目录名 目的目录名 删除文件及目录使用 rm 删除文件使用rm -f 强制删除文件无法使用rm删除目录，应使用rm -r删除目录效果图如下所示 移动文件与文件重命名移动文件： mv 源目录文件 目的目录重命名： mv 旧文件名 新文件名批量重命名： rename ‘s/.txt/.c’*.txt 表示将.txt后缀改为.c 查看文件使用cat查看文件，效果如下图 加入 -n 显示行号 使用more显示一屏文件,键入ENTER显示下一行，键入space显示下一屏 可以使用tail和head显示后面几行和前面几行的文件，添加 -n 2表示显示行数，效果图如下所示]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Bazinga]]></title>
    <url>%2F2018%2F03%2F06%2FnewFile%2F</url>
    <content type="text"><![CDATA[Hey man.]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>one</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F02%2F27%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
